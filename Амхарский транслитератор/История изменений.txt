Всё ок, пробелы убрал стрипом:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0    
    line = line.strip('\n')
    line = line.split('\t')
    for ch in line:
        ch = ch.strip()
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1]+vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     

f1 = open ('Text_1.txt', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Text_2.txt', 'w', encoding = 'utf8')

for key, value in alphabet.items():
    text = text.replace(key, value)
f2.write(text)
f1.close()
f2.close()



*

Всё ок, но только если амхарские буквы идут через пробелы в файле “Text_1”:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')    
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1]+vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     

f1 = open ('Text_1.txt', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Text_2.txt', 'w', encoding = 'utf8')

for key, value in alphabet.items():
    text = text.replace(key, value)
f2.write(text)
f1.close()
f2.close()



*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1] + vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     
            
f1 = open ('Text_1.txt', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Text_2.txt', 'w', encoding = 'utf8')


for key, value in alphabet.items():
    text = text.replace(key, value)
       
print(text)


*

Транслитерировал пару букв. Почему-то не все:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1] + vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     
            
f1 = open ('Text_1.txt', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Text_2.txt', 'w', encoding = 'utf8')

for key, value in alphabet.items():
    text = text.replace(key, value)
print(text)

Результат:
የአማርñ a ኪb oርድ


*

Извлечение данных из словаря:

l = {'george':16,'amber':19}
for k, v in l.items():
    print(k, v)

Результат:
amber 19
george 16

*

l = {'george':16,'amber':19}
for k, v in l.items():
    print(v)

Результат:

19
16


*

Извлечение данных из словаря:

my = {'value': 'apple', 'blah': 2}
print(my.values())

Результат:

dict_values([2, 'apple'])

*

l = [{'value': 'apple', 'blah': 2}, {'value': 'banana', 'blah': 3} , {'value': 'cars', 'blah':4}]
print([d['value'] for d in l])

Результат:
['apple', 'banana', 'cars']

*

Промежуточное: как извлечь ключи и их значения из словаря:

newdict = {1:0, 2:0, 3:0}
for i in newdict.values():
    print(i)
for n in newdict.keys():
    print(n)

Результат:

0
0
0
1
2
3


*

Черновик:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1] + vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     
            
f1 = open ('Text_1.txt', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Text_2.txt', 'w', encoding = 'utf8')
for letter in text:
    ch1 = alphabet.items()
    text = text.replace(ch0, ch1)
print(text)



*

Получился словарик с верными значениями:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = consonants[countlines-1] + vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     
            
print(alphabet)

Результат:

{'ፁ ': "s' u ", 'ዩ ': 'y u ', 'ዱ ': 'd u ', 'ጥ ': "t' ə ", 'ፋ ': 'f a ', 'ጸ ': "s' ä ", 'ዉ ': 'w u ', 'ኺ ': 'h i ', 'ት ': 't ə ', 'ብ ': 'b ə ', 'ሀ ': 'h ä ', 'ሱ ': 's u ', 'ዒ ': 'ʾ i ', 'ፌ ': 'f e ', 'ሢ ': 's i ', 'ጽ ': "s' ə ", 'ፅ ': "s' ə ", 'ጉ ': 'g u ', 'አ ': 'ʾ ä ', 'ኆ': 'h o', 'ጭ ': "č' ə ", 'ዚ ': 'z i ', 'ሂ ': 'h i ', 'ዋ ': 'w a ', 'ሰ ': 's ä ', 'ሴ ': 's e ', 'ጡ ': "t' u ", 'ፊ ': 'f i ', 'ጤ ': "t' e ", 'ፀ ': "s' ä ", 'ቾ': 'č o', 'ተ ': 't ä ', 'ል ': 'l ə ', 'ጎ': 'g o', 'ሤ ': 's e ', 'ኬ ': 'k e ', 'ቅ ': 'q ə ', 'ሥ ': 's ə ', 'ፃ ': "s' a ", 'ሻ ': 'š a ', 'ሐ ': 'h ä ', 'ጨ ': "č' ä ", 'ግ ': 'g ə ', 'ጼ ': "s' e ", 'ሆ': 'h o', 'ዠ ': 'ž ä ', 'መ ': 'm ä ', 'ሸ ': 'š ä ', 'ሼ ': 'š e ', 'ጹ ': "s' u ", 'ዘ ': 'z ä ', 'ኾ': 'h o', 'ቤ ': 'b e ', 'ፔ ': 'p e ', 'ኪ ': 'k i ', 'ኩ ': 'k u ', 'ኀ ': 'h ä ', 'ጺ ': "s' i ", 'ህ ': 'h ə ', 'ከ ': 'k ä ', 'ዐ ': 'ʾ ä ', 'ዶ': 'd o', 'ኚ ': 'ñ i ', 'ን ': 'n ə ', 'ፒ ': 'p i ', 'ጾ': "s' o", 'ዲ ': 'd i ', 'ዥ ': 'ž ə ', 'ሪ ': 'r i ', 'ሡ ': 's u ', 'ጂ ': 'ǧ i ', 'ሁ ': 'h u ', 'ፍ ': 'f ə ', 'ዤ ': 'ž e ', 'ፄ ': "s' e ", 'ነ ': 'n ä ', 'ኹ ': 'h u ', 'ቂ ': 'q i ', 'ኣ ': 'ʾ a ', 'ፎ': 'f o', 'ኛ ': 'ñ a ', 'ዖ': 'ʾ o', 'ስ ': 's ə ', 'ጴ ': "p' e ", 'ሓ ': 'h a ', 'ሾ': 'š o', 'ዞ': 'z o', 'ዕ ': 'ʾ ə ', 'ጩ ': "č' u ", 'ኝ ': 'ñ ə ', 'ኻ ': 'h a ', 'ጱ ': "p' u ", 'ዴ ': 'd e ', 'ጣ ': "t' a ", 'ጁ ': 'ǧ u ', 'ሚ ': 'm i ', 'ዊ ': 'w i ', 'ዣ ': 'ž a ', 'ላ ': 'l a ', 'ጫ ': "č' a ", 'ች ': 'č ə ', 'ዑ ': 'ʾ u ', 'ፂ ': "s' i ", 'ሖ': 'h o', 'ድ ': 'd ə ', 'ሃ ': 'h a ', 'ጮ': "č' o", 'ዦ': 'ž o', 'ዬ ': 'y e ', 'ሊ ': 'l i ', 'ኦ': 'ʾ o', 'ጌ ': 'g e ', 'ዡ ': 'ž u ', 'ደ ': 'd ä ', 'ሌ ': 'l e ', 'ኖ': 'n o', 'ሉ ': 'l u ', 'ያ ': 'y a ', 'ኮ': 'k o', 'ሽ ': 'š ə ', 'ጆ': 'ǧ o', 'እ ': 'ʾ ə ', 'ዛ ': 'z a ', 'ታ ': 't a ', 'ኔ ': 'n e ', 'ሒ ': 'h i ', 'ሙ ': 'm u ', 'ባ ': 'b a ', 'ፈ ': 'f ä ', 'ሦ': 's o', 'ጰ ': "p' ä ", 'ኡ ': 'ʾ u ', 'ጃ ': 'ǧ a ', 'ዜ ': 'z e ', 'ቢ ': 'b i ', 'ወ ': 'w ä ', 'ቼ ': 'č e ', 'ሺ ': 'š i ', 'ኙ ': 'ñ u ', 'ገ ': 'g ä ', 'ኸ ': 'h ä ', 'ሠ ': 's ä ', 'ፐ ': 'p ä ', 'ጢ ': "t' i ", 'ቀ ': 'q ä ', 'ፑ ': 'p u ', 'ጀ ': 'ǧ ä ', 'ጄ ': 'ǧ e ', 'ዔ ': 'ʾ e ', 'ጋ ': 'g a ', 'ዢ ': 'ž i ', 'ዙ ': 'z u ', 'ቲ ': 't i ', 'ሜ ': 'm e ', 'ጳ ': "p' a ", 'ቦ': 'b o', 'ሕ ': 'h ə ', 'ፕ ': 'p ə ', 'ሬ ': 'r e ', 'በ ': 'b ä ', 'ጅ ': 'ǧ ə ', 'ቺ ': 'č i ', 'ጊ ': 'g i ', 'ና ': 'n a ', 'ቁ ': 'q u ', 'ኑ ': 'n u ', 'ጠ ': "t' ä ", 'ጵ ': "p' ə ", 'ቃ ': 'q a ', 'ኤ ': 'ʾ e ', 'ኘ ': 'ñ ä ', 'ቻ ': 'č a ', 'ዎ': 'w o', 'ረ ': 'r ä ', 'ጬ ': "č' e ", 'ሲ ': 's i ', 'ሣ ': 's a ', 'ቶ': 't o', 'ለ ': 'l ä ', 'ክ ': 'k ə ', 'ር ': 'r ə ', 'ቡ ': 'b u ', 'ኽ ': 'h ə ', 'ፖ': 'p o', 'ፆ': "s' o", 'ጻ ': "s' a ", 'የ ': 'y ä ', 'ዪ ': 'y i ', 'ጶ': "p' o", 'ሞ': 'm o', 'ማ ': 'm a ', 'ም ': 'm ə ', 'ዌ ': 'w e ', 'ኄ ': 'h e ', 'ጲ ': "p' i ", 'ሄ ': 'h e ', 'ኅ ': 'h ə ', 'ቹ ': 'č u ', 'ዓ ': 'ʾ a ', 'ፓ ': 'p a ', 'ኃ ': 'h a ', 'ሹ ': 'š u ', 'ዝ ': 'z ə ', 'ሔ ': 'h e ', 'ጪ ': "č' i ", 'ሶ': 's o', 'ሑ ': 'h u ', 'ኢ ': 'ʾ i ', 'ቴ ': 't e ', 'ው ': 'w ə ', 'ፉ ': 'f u ', 'ካ ': 'k a ', 'ሳ ': 's a ', 'ቆ': 'q o', 'ሎ': 'l o', 'ሩ ': 'r u ', 'ኒ ': 'n i ', 'ዮ': 'y o', 'ኼ ': 'h e ', 'ዳ ': 'd a ', 'ራ ': 'r a ', 'ቄ ': 'q e ', 'ኂ ': 'h i ', 'ኞ': 'ñ o', 'ኁ ': 'h u ', 'ጦ': "t' o", 'ሮ': 'r o', 'ኜ ': 'ñ e ', 'ቱ ': 't u ', 'ቸ ': 'č ä ', 'ይ ': 'y ə '}



*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet.append(ch)
            for letter in alphabet:
                letter = consonants[countlines-1] + vocals[countcolumns-1]
        countcolumns+=1
    countlines+=1                     
            
print(letter)



*

Фигня:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet.append(ch)
            for letter in alphabet:
                letter = consonants[-1] + vocals[-1]
        countcolumns+=1
    countlines+=1                     
            
print(letter)


*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = 'consonants'[0]+'vocals'[4]       

        countcolumns+=1
    countlines+=1
            
print(consonants[0])
print(vocals[4])
print(alphabet)

Результат:

h 
e 
{'ኽ ': 'cl', 'ሙ ': 'cl', 'ወ ': 'cl', 'ዕ ': 'cl', 'ጬ ': 'cl', 'ዝ ': 'cl', 'ረ ': 'cl', 'ሉ ': 'cl', 'ሲ ': 'cl', 'ዉ ': 'cl', 'ሩ ': 'cl', 'ቦ': 'cl', 'ቸ ': 'cl', 'ጹ ': 'cl', 'ዬ ': 'cl', 'ቶ': 'cl', 'ቂ ': 'cl', 'ሡ ': 'cl', 'ቱ ': 'cl', 'ሑ ': 'cl', 'ሆ': 'cl', 'ግ ': 'cl', 'ሳ ': 'cl', 'ፑ ': 'cl', 'አ ': 'cl', 'ጢ ': 'cl', 'ዜ ': 'cl', 'ጦ': 'cl', 'ቼ ': 'cl', 'ቾ': 'cl', 'ለ ': 'cl', 'ጥ ': 'cl', 'ጪ ': 'cl', 'ፒ ': 'cl', 'ጽ ': 'cl', 'ዊ ': 'cl', 'ፁ ': 'cl', 'ኼ ': 'cl', 'ኝ ': 'cl', 'ኑ ': 'cl', 'ሊ ': 'cl', 'ሺ ': 'cl', 'ዩ ': 'cl', 'ጅ ': 'cl', 'ድ ': 'cl', 'ሞ': 'cl', 'ካ ': 'cl', 'ጺ ': 'cl', 'ሰ ': 'cl', 'ፃ ': 'cl', 'ደ ': 'cl', 'ኄ ': 'cl', 'ነ ': 'cl', 'ኚ ': 'cl', 'ጳ ': 'cl', 'ዱ ': 'cl', 'ጾ': 'cl', 'ኡ ': 'cl', 'ሀ ': 'cl', 'ዣ ': 'cl', 'ዒ ': 'cl', 'ዔ ': 'cl', 'ሖ': 'cl', 'ጶ': 'cl', 'ማ ': 'cl', 'ጉ ': 'cl', 'ጮ': 'cl', 'ተ ': 'cl', 'ዠ ': 'cl', 'ያ ': 'cl', 'ዓ ': 'cl', 'ጆ': 'cl', 'ጣ ': 'cl', 'ዖ': 'cl', 'ቡ ': 'cl', 'ጌ ': 'cl', 'ዳ ': 'cl', 'ከ ': 'cl', 'ፍ ': 'cl', 'ኤ ': 'cl', 'ኖ': 'cl', 'ጱ ': 'cl', 'ዎ': 'cl', 'ቄ ': 'cl', 'ፖ': 'cl', 'ጨ ': 'cl', 'ኞ': 'cl', 'በ ': 'cl', 'ኪ ': 'cl', 'ሱ ': 'cl', 'ፎ': 'cl', 'ኔ ': 'cl', 'ዢ ': 'cl', 'ቅ ': 'cl', 'ፄ ': 'cl', 'ሮ': 'cl', 'ስ ': 'cl', 'ቲ ': 'cl', 'ጤ ': 'cl', 'ዚ ': 'cl', 'ክ ': 'cl', 'ሦ': 'cl', 'ጡ ': 'cl', 'ቀ ': 'cl', 'ዤ ': 'cl', 'ኛ ': 'cl', 'ዛ ': 'cl', 'ራ ': 'cl', 'ሶ': 'cl', 'ው ': 'cl', 'ፀ ': 'cl', 'ዲ ': 'cl', 'ጁ ': 'cl', 'ሄ ': 'cl', 'ዮ': 'cl', 'ቴ ': 'cl', 'ጂ ': 'cl', 'ፅ ': 'cl', 'ቃ ': 'cl', 'ቁ ': 'cl', 'ቻ ': 'cl', 'ጼ ': 'cl', 'ፓ ': 'cl', 'ጩ ': 'cl', 'ህ ': 'cl', 'ጭ ': 'cl', 'ሽ ': 'cl', 'ጋ ': 'cl', 'ኺ ': 'cl', 'ሔ ': 'cl', 'ቤ ': 'cl', 'ቢ ': 'cl', 'ጴ ': 'cl', 'ት ': 'cl', 'ጊ ': 'cl', 'ጠ ': 'cl', 'ጀ ': 'cl', 'ኸ ': 'cl', 'ላ ': 'cl', 'ጸ ': 'cl', 'ታ ': 'cl', 'ሠ ': 'cl', 'ቺ ': 'cl', 'ፉ ': 'cl', 'ኆ': 'cl', 'ኾ': 'cl', 'ዪ ': 'cl', 'ዥ ': 'cl', 'ኒ ': 'cl', 'ፌ ': 'cl', 'ሻ ': 'cl', 'ቆ': 'cl', 'ኹ ': 'cl', 'ኢ ': 'cl', 'ሚ ': 'cl', 'ዌ ': 'cl', 'ዐ ': 'cl', 'ች ': 'cl', 'ሾ': 'cl', 'ፆ': 'cl', 'ሃ ': 'cl', 'ዙ ': 'cl', 'ሬ ': 'cl', 'ብ ': 'cl', 'ኩ ': 'cl', 'ኘ ': 'cl', 'ኣ ': 'cl', 'ሓ ': 'cl', 'ጃ ': 'cl', 'ቹ ': 'cl', 'ዘ ': 'cl', 'ዑ ': 'cl', 'ፔ ': 'cl', 'ኻ ': 'cl', 'ሎ': 'cl', 'ሁ ': 'cl', 'ሥ ': 'cl', 'መ ': 'cl', 'ዡ ': 'cl', 'ም ': 'cl', 'ጵ ': 'cl', 'ጲ ': 'cl', 'ሂ ': 'cl', 'ጰ ': 'cl', 'ጎ': 'cl', 'ኬ ': 'cl', 'ፋ ': 'cl', 'ፐ ': 'cl', 'ፊ ': 'cl', 'ሴ ': 'cl', 'ፈ ': 'cl', 'ሸ ': 'cl', 'ኙ ': 'cl', 'ሣ ': 'cl', 'ኂ ': 'cl', 'ባ ': 'cl', 'ፕ ': 'cl', 'ኜ ': 'cl', 'ን ': 'cl', 'ል ': 'cl', 'ጻ ': 'cl', 'ኦ': 'cl', 'ኃ ': 'cl', 'ኀ ': 'cl', 'የ ': 'cl', 'ሼ ': 'cl', 'ጫ ': 'cl', 'ኮ': 'cl', 'ሤ ': 'cl', 'ሕ ': 'cl', 'ሢ ': 'cl', 'ሌ ': 'cl', 'ኅ ': 'cl', 'ፂ ': 'cl', 'ገ ': 'cl', 'ሒ ': 'cl', 'ሜ ': 'cl', 'ሹ ': 'cl', 'ዴ ': 'cl', 'ሪ ': 'cl', 'ኁ ': 'cl', 'ጄ ': 'cl', 'ዦ': 'cl', 'ዋ ': 'cl', 'እ ': 'cl', 'ና ': 'cl', 'ዞ': 'cl', 'ይ ': 'cl', 'ር ': 'cl', 'ሐ ': 'cl', 'ዶ': 'cl'}


*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = 'consonants'[5]+'vocals'[1]       
        countcolumns+=1
    countlines+=1
          
print(alphabet)




*

Присвоил всем амхарским буквам значения “so”, почему-то буквы эти выпадают в случайном порядке:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        if countlines != 0 and countcolumns != 0:
            alphabet[ch] = 'consonants'[3]+'vocals'[1]       
        countcolumns+=1
    countlines+=1
          
print(alphabet)




*

Правильные гласные и согласные:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    countcolumns = 0
    line = line.strip('\n')
    line = line.split('\t')        
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        countcolumns+=1
    countlines+=1
            
print(consonants)
print(vocals)

Результат:

['h ', 'l ', 'h ', 'm ', 's ', 'r ', 's ', 'š ', 'q ', 'b ', 't ', 'č ', 'h ', 'n ', 'ñ ', 'ʾ ', 'k ', 'h ', 'w ', 'ʾ ', 'z ', 'ž ', 'y ', 'd ', 'ǧ ', 'g ', "t' ", "č' ", "p' ", "s' ", "s' ", 'f ', 'p ']
['ä ', 'u ', 'i ', 'a ', 'e ', 'ə ', 'o']

*

Правильные гласные плюс один согласный:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:    
    line = line.strip('\n')
    line = line.split('\t')       
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 8:
            consonants.append(ch)
        countcolumns+=1
    countlines+=1
        
print(consonants)
print(vocals)

Результат:

['h ']
['ä ', 'u ', 'i ', 'a ', 'e ', 'ə ', 'o']


*

Правильно напечатал гласные:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    line = line.strip('\n')
    line = line.split('\t')       
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
        if countlines != 0 and countcolumns == 0:
            consonants.append(ch)
        countcolumns+=1
    countlines+=1
print(consonants)
print(vocals)

Результат: []
['ä ', 'u ', 'i ', 'a ', 'e ', 'ə ', 'o']



*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    line = line.strip('\n')
    line = line.split('\t')
    consonants.append(line[0])
    if countlines == 0: 
        vocals.append(line)
    countlines+=1

print(consonants)
print(vocals)

Результат:
[' ', 'h ', 'l ', 'h ', 'm ', 's ', 'r ', 's ', 'š ', 'q ', 'b ', 't ', 'č ', 'h ', 'n ', 'ñ ', 'ʾ ', 'k ', 'h ', 'w ', 'ʾ ', 'z ', 'ž ', 'y ', 'd ', 'ǧ ', 'g ', "t' ", "č' ", "p' ", "s' ", "s' ", 'f ', 'p ']
[[' ', 'ä ', 'u ', 'i ', 'a ', 'e ', 'ə ', 'o']]




*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []
line = []

for line in file:
    line.strip('\n')
    line.split('\t')
    consonants.append(line[0])
vocals.append(line)
print(consonants)
print(vocals)

Результат:
[' ', 'h', 'l', 'h', 'm', 's', 'r', 's', 'š', 'q', 'b', 't', 'č', 'h', 'n', 'ñ', 'ʾ', 'k', 'h', 'w', 'ʾ', 'z', 'ž', 'y', 'd', 'ǧ', 'g', 't', 'č', 'p', 's', 's', 'f', 'p']
['p \tፐ \tፑ \tፒ \tፓ \tፔ \tፕ \tፖ']



*

Напечатал только первую колонку (пробел, потом h и т.д. до p)

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []

for line in file:
    line.strip('\n')
    line.split('\t')
    print(line[0])



*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []

for line in file:
    line.strip('\n')
    line.split('\t')
    lines.append(line)
    print(lines[0])

Результат:

        ä       u       i       a       e       ə       o

(34 раза)




*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []

for line in file:
    line.strip('\n')
    line.split('\t')
    lines.append(line)
    print(lines[0:1])

Результат:
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']
[' \tä \tu \ti \ta \te \tə \to\n']


*

Распечатал в виде
[' \tä \tu \ti \ta \te \tə \to\n']:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []

for line in file:
    line.strip('\n')
    line.split('\t')
    lines.append(line)

print(lines[0:1])





*

Распечатал только первую строку:

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}
lines = []

for line in file:
    line.strip('\n')
    line.split('\t')
    lines.append(line)

print(lines[0])

Результат:         ä       u       i       a       e       ə       o


*

file = open ('amkharsky.tsv', 'r', encoding = 'utf8')

countlines = 0
countcolumns = 0 
vocals = []
consonants = []
alphabet = {}

for line in file:
    line.strip('\n')
    line.split('\t')
    countcolumns += 1
    
    
    for ch in line:
        if countlines == 0 and countcolumns != 0:
            vocals.append(ch)
            
print(vocals)
            
        
*




tsplit = line.split("\t")
    text = text.replace('0', '')
    f3.write (tsplit)

f2.close()




*

import re

f1 = open ('Tablichka.tsv', 'r', encoding = 'utf8')
text = f1.read()
f2 = open ('Amkhar_r.txt', 'r', encoding = 'utf8')
f3 = open ('Amkhar_w.txt', 'w', encoding = 'utf8')

for line in f1:
    tsplit = line.split("\t")


    
    firstcolumns = tsplit[:-1]
    lastitems = tsplit[-1].strip().split(";")
    for item in lastitems:
        allcolumns = firstcolumns + item.split("=")
        outfile.write("\t".join(allcolumns) + "\n")

rtn = re.split('([.!?\n] *)', text)
final = ''.join([i.capitalize() for i in rtn])

text = text.replace('ა', 'a')

f2.write (final)
f2.close()        



*

Всё не так, пытаюсь нащупывать строки и столбцы:

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()
line = table.split('\n')
line = table.split('\t')

vow = []
cons = []
alph = {}

print(line)
         



*

Не фурычит

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

vow = []
cons = []
alph = {}

for line in table:
    countL = 0
    for ch in line:
        countCh = 0
        if countL==0 and countCh!=0:
            vow.append(ch)
        if countL!=0 and countCh==0:
            cons.append(ch)
        if countL!=0 and countCh!=0:
            alph[ch] = cons[countL-1]+voc[countCh-1]
        print(cons)
        countCh+=1
    countL+=1 
        


*

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

с = 0
voc = []
cons = []
alph = {}

for line in table:
	line.strip('\n')
	line.split('\t')
	v = 0
	с = 0
	for ch in line:
    	    if c==0 and v!=0:
        	        voc.append(ch)
    	    v+=1    
    	    print(voc)
       	 
   	 
*

Какая-то хрень:

import csv

with open ('amkharsky.tsv', 'r', encoding = 'utf8') as file1:
	table = csv.reader(file1, delimiter='\t')

	c = 0
    
	voc = []
	cons = []
	alph = {}

	for row in table:
    	v = 0
    	for ch in row:
        	if c==0 and v!=0:
            	voc.append(ch)
        	v+=1    
        	print(voc)


*

import csv

with open ('amkharsky.tsv', 'r', encoding = 'utf8') as file1:
	table = csv.reader(file1, delimiter='\t')

	c = 0
	voc = []

	for line in table:
    	if c!=0:
        	voc.append(ch)
        	print(voc)
    	c+=1



*

Получилось напечатать только последний столбец:

import csv

with open ('amkharsky.tsv', 'r', encoding = 'utf8') as file1:
	table = csv.reader(file1, delimiter='\t')

	c = 0
	voc = []
	cons = []
	alph = {}

	for line in table:
    	print(line[-1])



*

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

c = int(c)
c = 0
voc = []
cons = []
alph = {}

for line in table:
	line.strip('\n')
	line.split('\t')
c += 1
print(line)

*


f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()
for line in table:
    line.split('\t')
print(line)

*

import csv
with open ('amkharsky.tsv', 'r', encoding = 'utf8') as f1:
    table = csv.reader(f1, delimiter = '\t')
    for line in table:
        print(line)

*

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

c = 0
voc = []
cons = []
alph = {}

for line in table:
    line.strip('\n')
    line.split('\t')
    v = 0
    for ch in line:
        if c == 0 and v != 0:
            voc.append(ch)
        if c != 0 and v == 0:
            cons.append(ch)

        v += 1
        c += 1
        print(voc)
        



*

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

c = 0
voc = []
cons = []
alph = {}

for line in table:
    line.strip('\n')
    line.split('\t')
    
v = 0

while True:
    for ch in line:
        if c == 0 and v != 0:
            voc.append(ch)
        if c != 0 and v == 0:
            cons.append(ch)
        if c != 0 and v != 0:
            alph [ch] = cons [c-1] + voc [v-1]
        v += 1
        c += 1
        print(alph[ch])
    


*


f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

с = 0

for line in table:
    line.strip('\n')
    line.split('\t')
    
    print(line)
    
c += 1


*

Напечатал по очереди все буквы:

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()

с = 0

for line in table:
    line.strip('\n')
    line.split('\t')
    
    print(line)
c += 1



*

v = 0

for ch in line:
    if c == 0 and v != 0:
        voc.append(ch)
    if c != 0 and v == 0:
        cons.append(ch)
    if c != 0 and v != 0:
        alph [ch] = cons [c-1] + voc [v-1]
    print(alph)
v += 1
c += 1
    
        
    



*

f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()
c = 0
voc = []
cons = []
alph = {}

for line in table:
    line.strip('\n')
    line.split('\t')
    
v = 0

for ch in line:
    if c == 0 and v != 0:
        voc.append(ch)
    if c != 0 and v == 0:
        cons.append(ch)
    if c != 0 and v != 0:
        alph [ch] = cons [c-1] + voc [v-1]
    print(alph)
v += 1
c += 1
    
        
    





*


f1 = open ('amkharsky.tsv', 'r', encoding = 'utf8')
table = f1.read()
voc = []
cons = []
c = 0
v = 0
for line in table:
    line.strip('\n')
    line.split('\t')
for ch in line:
    if c == 0 and v != 0: